// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/overcyn/mochi/pb/view/stacknav/stacknavigator.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class MochiPBStackNavScreen;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MochiPBStackNavStacknavigatorRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MochiPBStackNavStacknavigatorRoot : GPBRootObject
@end

#pragma mark - MochiPBStackNavScreen

typedef GPB_ENUM(MochiPBStackNavScreen_FieldNumber) {
  MochiPBStackNavScreen_FieldNumber_Id_p = 1,
  MochiPBStackNavScreen_FieldNumber_Title = 2,
  MochiPBStackNavScreen_FieldNumber_BackButtonTitle = 3,
  MochiPBStackNavScreen_FieldNumber_BackButtonHidden = 4,
  MochiPBStackNavScreen_FieldNumber_TitleViewId = 5,
  MochiPBStackNavScreen_FieldNumber_RightViewIdsArray = 6,
  MochiPBStackNavScreen_FieldNumber_LeftViewIdsArray = 7,
  MochiPBStackNavScreen_FieldNumber_CustomBackButtonTitle = 8,
};

@interface MochiPBStackNavScreen : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite) BOOL customBackButtonTitle;

@property(nonatomic, readwrite, copy, null_resettable) NSString *backButtonTitle;

@property(nonatomic, readwrite) BOOL backButtonHidden;

@property(nonatomic, readwrite) int64_t titleViewId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *rightViewIdsArray;
/** The number of items in @c rightViewIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rightViewIdsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *leftViewIdsArray;
/** The number of items in @c leftViewIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger leftViewIdsArray_Count;

@end

#pragma mark - MochiPBStackNavStackNav

typedef GPB_ENUM(MochiPBStackNavStackNav_FieldNumber) {
  MochiPBStackNavStackNav_FieldNumber_ScreensArray = 1,
};

@interface MochiPBStackNavStackNav : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MochiPBStackNavScreen*> *screensArray;
/** The number of items in @c screensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger screensArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
