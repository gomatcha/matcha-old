// Objective-C API for talking to github.com/overcyn/mochi/bridge Go package.
//   gobind -lang=objc github.com/overcyn/mochi/bridge
//
// File is generated by gobind. Do not edit.

#ifndef __Bridge_H__
#define __Bridge_H__

@import Foundation;
#include "Universe.objc.h"


@class BridgeNestedView;
@class BridgeValue;
@class BridgeValueSlice;

@interface BridgeNestedView : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
// skipped method NestedView.Mount with unsupported parameter or return types

- (void)unmount;
// skipped method NestedView.Update with unsupported parameter or return types

@end

@interface BridgeValue : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (BOOL)bool_;
- (NSData*)bytes_;
- (BridgeValueSlice*)call:(BridgeValueSlice*)args;
- (BridgeValueSlice*)callSlice:(BridgeValueSlice*)args;
- (BridgeValue*)copy;
- (BridgeValue*)elem;
- (BridgeValue*)fieldByName:(NSString*)name;
- (double)float_;
- (BridgeValue*)index:(long)i;
- (int64_t)int_;
- (BOOL)isNil;
- (long)kind;
- (long)len;
- (BridgeValue*)mapIndex:(BridgeValue*)key;
- (BridgeValueSlice*)mapKeys;
- (BridgeValue*)methodByName:(NSString*)name;
- (BOOL)ptrEqual:(BridgeValue*)v2;
- (NSString*)string_;
- (int64_t)uint_;
@end

@interface BridgeValueSlice : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (void)append:(BridgeValue*)n;
- (BridgeValue*)index:(long)i;
- (long)len;
@end

FOUNDATION_EXPORT BridgeValueSlice* BridgeNewValueSlice();

FOUNDATION_EXPORT BridgeValue* BridgeRun();

#endif
