// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: view.capnp

#include "view.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<146> b_e94009e96d6eeb30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48, 235, 110, 109, 233,   9,  64, 233,
     11,   0,   0,   0,   1,   0,   4,   0,
    132,   8,  86, 103, 113, 196, 190, 154,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
     56,   1,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 105, 108, 100,  73, 100,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 121, 111, 117, 116,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 105, 110, 116,  73, 100,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100, 114, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     48, 235, 110, 109, 233,   9,  64, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 121, 111, 117, 116,  71, 117,
    105, 100, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     43, 203, 245,  61,  97, 216, 157, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e94009e96d6eeb30 = b_e94009e96d6eeb30.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e94009e96d6eeb30[] = {
  &s_bd0993cece143673,
  &s_cb9dd8613df5cb2b,
  &s_e94009e96d6eeb30,
};
static const uint16_t m_e94009e96d6eeb30[] = {1, 4, 0, 5, 2, 3, 6};
static const uint16_t i_e94009e96d6eeb30[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawBrandedSchema::Dependency bd_e94009e96d6eeb30[] = {
  { 16777222,  ::Map< ::capnp::Text,  ::capnp::AnyPointer>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_e94009e96d6eeb30 = {
  0xe94009e96d6eeb30, b_e94009e96d6eeb30.words, 146, d_e94009e96d6eeb30, m_e94009e96d6eeb30,
  3, 7, i_e94009e96d6eeb30, nullptr, nullptr, { &s_e94009e96d6eeb30, nullptr, bd_e94009e96d6eeb30, 0, sizeof(bd_e94009e96d6eeb30) / sizeof(bd_e94009e96d6eeb30[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_83927b3747bee5da = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    218, 229, 190,  71,  55, 123, 146, 131,
     11,   0,   0,   0,   1,   0,   0,   0,
    132,   8,  86, 103, 113, 196, 190, 154,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 100, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     48, 235, 110, 109, 233,   9,  64, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83927b3747bee5da = b_83927b3747bee5da.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83927b3747bee5da[] = {
  &s_e94009e96d6eeb30,
};
static const uint16_t m_83927b3747bee5da[] = {0};
static const uint16_t i_83927b3747bee5da[] = {0};
const ::capnp::_::RawSchema s_83927b3747bee5da = {
  0x83927b3747bee5da, b_83927b3747bee5da.words, 31, d_83927b3747bee5da, m_83927b3747bee5da,
  1, 1, i_83927b3747bee5da, nullptr, nullptr, { &s_83927b3747bee5da, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_bd0993cece143673 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
     11,   0,   0,   0,   1,   0,   0,   0,
    132,   8,  86, 103, 113, 196, 190, 154,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  23,   0,   0,   0,
    118, 105, 101, 119,  46,  99,  97, 112,
    110, 112,  58,  77,  97, 112,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     67,  29, 103, 211, 151,  45,  65, 145,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     67,  29, 103, 211, 151,  45,  65, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  34,   0,   0,   0,
      5,   0,   0,   0,  50,   0,   0,   0,
     75, 101, 121,   0,   0,   0,   0,   0,
     86,  97, 108, 117, 101,   0,   0,   0, }
};
::capnp::word const* const bp_bd0993cece143673 = b_bd0993cece143673.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bd0993cece143673[] = {
  &s_91412d97d3671d43,
};
static const uint16_t m_bd0993cece143673[] = {0};
static const uint16_t i_bd0993cece143673[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_bd0993cece143673[] = {
  { 16777216,  ::Map< ::capnp::AnyPointer,  ::capnp::AnyPointer>::Entry::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_bd0993cece143673 = {
  0xbd0993cece143673, b_bd0993cece143673.words, 48, d_bd0993cece143673, m_bd0993cece143673,
  1, 1, i_bd0993cece143673, nullptr, nullptr, { &s_bd0993cece143673, nullptr, bd_bd0993cece143673, 0, sizeof(bd_bd0993cece143673) / sizeof(bd_bd0993cece143673[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_91412d97d3671d43 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67,  29, 103, 211, 151,  45,  65, 145,
     15,   0,   0,   0,   1,   0,   0,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 101, 119,  46,  99,  97, 112,
    110, 112,  58,  77,  97, 112,  46,  69,
    110, 116, 114, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
    115,  54,  20, 206, 206, 147,   9, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91412d97d3671d43 = b_91412d97d3671d43.words;
#if !CAPNP_LITE
static const uint16_t m_91412d97d3671d43[] = {0, 1};
static const uint16_t i_91412d97d3671d43[] = {0, 1};
const ::capnp::_::RawSchema s_91412d97d3671d43 = {
  0x91412d97d3671d43, b_91412d97d3671d43.words, 47, nullptr, m_91412d97d3671d43,
  0, 2, i_91412d97d3671d43, nullptr, nullptr, { &s_91412d97d3671d43, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Node
#ifndef _MSC_VER
constexpr uint16_t Node::_capnpPrivate::dataWordSize;
constexpr uint16_t Node::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Node::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Node::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Node::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Root
#ifndef _MSC_VER
constexpr uint16_t Root::_capnpPrivate::dataWordSize;
constexpr uint16_t Root::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Root::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Root::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Root::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



