// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/overcyn/mochi/pb/touch.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EventKind int32

const (
	EventKind_EVENT_KIND_BEGAN     EventKind = 0
	EventKind_EVENT_KIND_CHANGED   EventKind = 1
	EventKind_EVENT_KIND_CANCELLED EventKind = 2
	EventKind_EVENT_KIND_ENDED     EventKind = 3
)

var EventKind_name = map[int32]string{
	0: "EVENT_KIND_BEGAN",
	1: "EVENT_KIND_CHANGED",
	2: "EVENT_KIND_CANCELLED",
	3: "EVENT_KIND_ENDED",
}
var EventKind_value = map[string]int32{
	"EVENT_KIND_BEGAN":     0,
	"EVENT_KIND_CHANGED":   1,
	"EVENT_KIND_CANCELLED": 2,
	"EVENT_KIND_ENDED":     3,
}

func (x EventKind) String() string {
	return proto.EnumName(EventKind_name, int32(x))
}
func (EventKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type Recognizer struct {
	Id         int64                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Recognizer *google_protobuf.Any `protobuf:"bytes,3,opt,name=recognizer" json:"recognizer,omitempty"`
}

func (m *Recognizer) Reset()                    { *m = Recognizer{} }
func (m *Recognizer) String() string            { return proto.CompactTextString(m) }
func (*Recognizer) ProtoMessage()               {}
func (*Recognizer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Recognizer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Recognizer) GetRecognizer() *google_protobuf.Any {
	if m != nil {
		return m.Recognizer
	}
	return nil
}

type RecognizerList struct {
	Recognizers []*Recognizer `protobuf:"bytes,1,rep,name=recognizers" json:"recognizers,omitempty"`
}

func (m *RecognizerList) Reset()                    { *m = RecognizerList{} }
func (m *RecognizerList) String() string            { return proto.CompactTextString(m) }
func (*RecognizerList) ProtoMessage()               {}
func (*RecognizerList) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *RecognizerList) GetRecognizers() []*Recognizer {
	if m != nil {
		return m.Recognizers
	}
	return nil
}

type TapRecognizer struct {
	Count          int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	RecognizedFunc int64 `protobuf:"varint,2,opt,name=recognizedFunc" json:"recognizedFunc,omitempty"`
}

func (m *TapRecognizer) Reset()                    { *m = TapRecognizer{} }
func (m *TapRecognizer) String() string            { return proto.CompactTextString(m) }
func (*TapRecognizer) ProtoMessage()               {}
func (*TapRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *TapRecognizer) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TapRecognizer) GetRecognizedFunc() int64 {
	if m != nil {
		return m.RecognizedFunc
	}
	return 0
}

type TapEvent struct {
	Timestamp *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Position  *Point                      `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (m *TapEvent) Reset()                    { *m = TapEvent{} }
func (m *TapEvent) String() string            { return proto.CompactTextString(m) }
func (*TapEvent) ProtoMessage()               {}
func (*TapEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *TapEvent) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TapEvent) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

type PressRecognizer struct {
	MinDuration *google_protobuf2.Duration `protobuf:"bytes,1,opt,name=minDuration" json:"minDuration,omitempty"`
	FuncId      int64                      `protobuf:"varint,2,opt,name=funcId" json:"funcId,omitempty"`
}

func (m *PressRecognizer) Reset()                    { *m = PressRecognizer{} }
func (m *PressRecognizer) String() string            { return proto.CompactTextString(m) }
func (*PressRecognizer) ProtoMessage()               {}
func (*PressRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *PressRecognizer) GetMinDuration() *google_protobuf2.Duration {
	if m != nil {
		return m.MinDuration
	}
	return nil
}

func (m *PressRecognizer) GetFuncId() int64 {
	if m != nil {
		return m.FuncId
	}
	return 0
}

type PressEvent struct {
	Timestamp *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Position  *Point                      `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Kind      EventKind                   `protobuf:"varint,3,opt,name=kind,enum=mochi.touch.EventKind" json:"kind,omitempty"`
	Duration  *google_protobuf2.Duration  `protobuf:"bytes,4,opt,name=duration" json:"duration,omitempty"`
}

func (m *PressEvent) Reset()                    { *m = PressEvent{} }
func (m *PressEvent) String() string            { return proto.CompactTextString(m) }
func (*PressEvent) ProtoMessage()               {}
func (*PressEvent) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *PressEvent) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PressEvent) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *PressEvent) GetKind() EventKind {
	if m != nil {
		return m.Kind
	}
	return EventKind_EVENT_KIND_BEGAN
}

func (m *PressEvent) GetDuration() *google_protobuf2.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type PanRecognizer struct {
}

func (m *PanRecognizer) Reset()                    { *m = PanRecognizer{} }
func (m *PanRecognizer) String() string            { return proto.CompactTextString(m) }
func (*PanRecognizer) ProtoMessage()               {}
func (*PanRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func init() {
	proto.RegisterType((*Recognizer)(nil), "mochi.touch.Recognizer")
	proto.RegisterType((*RecognizerList)(nil), "mochi.touch.RecognizerList")
	proto.RegisterType((*TapRecognizer)(nil), "mochi.touch.TapRecognizer")
	proto.RegisterType((*TapEvent)(nil), "mochi.touch.TapEvent")
	proto.RegisterType((*PressRecognizer)(nil), "mochi.touch.PressRecognizer")
	proto.RegisterType((*PressEvent)(nil), "mochi.touch.PressEvent")
	proto.RegisterType((*PanRecognizer)(nil), "mochi.touch.PanRecognizer")
	proto.RegisterEnum("mochi.touch.EventKind", EventKind_name, EventKind_value)
}

func init() { proto.RegisterFile("github.com/overcyn/mochi/pb/touch.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb1, 0x53, 0x4a, 0x3a, 0x56, 0x5c, 0x6b, 0x15, 0x05, 0x37, 0x07, 0x88, 0x7c, 0x80,
	0xd0, 0x83, 0x2d, 0x19, 0x90, 0x40, 0x9c, 0x92, 0x7a, 0x29, 0x55, 0x52, 0x2b, 0x5a, 0x45, 0x1c,
	0xb8, 0x54, 0xfe, 0x97, 0x64, 0x45, 0xbd, 0x6b, 0xd9, 0xeb, 0x4a, 0xe1, 0x71, 0x78, 0x26, 0x1e,
	0x08, 0x75, 0xe3, 0xd8, 0x26, 0x91, 0xe0, 0xc6, 0x71, 0xe7, 0xfb, 0xed, 0x7c, 0xf3, 0xcd, 0x2e,
	0xbc, 0x5e, 0x53, 0xb1, 0x29, 0x43, 0x3b, 0xe2, 0xa9, 0xc3, 0x1f, 0x92, 0x3c, 0xda, 0x32, 0x27,
	0xe5, 0xd1, 0x86, 0x3a, 0x59, 0xe8, 0x08, 0x5e, 0x46, 0x1b, 0x3b, 0xcb, 0xb9, 0xe0, 0x48, 0x93,
	0x55, 0x5b, 0x96, 0x86, 0x17, 0x6b, 0xce, 0xd7, 0xf7, 0x89, 0x23, 0xa5, 0xb0, 0x5c, 0x39, 0x01,
	0xdb, 0xee, 0xb8, 0xe1, 0xcb, 0x43, 0x49, 0xd0, 0x34, 0x29, 0x44, 0x90, 0x66, 0x15, 0xf0, 0xe2,
	0x10, 0x88, 0xcb, 0x3c, 0x10, 0x94, 0xb3, 0x4a, 0x1f, 0xff, 0x6d, 0xa2, 0xfb, 0x60, 0xcb, 0x4b,
	0xb1, 0x23, 0x2d, 0x02, 0x40, 0x92, 0x88, 0xaf, 0x19, 0xfd, 0x91, 0xe4, 0x48, 0x07, 0x95, 0xc6,
	0xa6, 0x32, 0x52, 0xc6, 0x1d, 0xa2, 0xd2, 0x18, 0xbd, 0x03, 0xc8, 0x6b, 0xd5, 0xec, 0x8c, 0x94,
	0xb1, 0xe6, 0xf6, 0xed, 0x9d, 0xb9, 0xbd, 0x37, 0xb7, 0x27, 0x6c, 0x4b, 0x5a, 0x9c, 0x35, 0x03,
	0xbd, 0xe9, 0x39, 0xa7, 0x85, 0x40, 0x1f, 0x41, 0x6b, 0xf4, 0xc2, 0x54, 0x46, 0x9d, 0xb1, 0xe6,
	0x3e, 0xb7, 0x5b, 0xeb, 0xb0, 0x9b, 0x1b, 0xa4, 0xcd, 0x5a, 0xb7, 0xd0, 0x5b, 0x06, 0x59, 0x6b,
	0xc6, 0x3e, 0x3c, 0x8d, 0x78, 0xc9, 0x44, 0x35, 0xe6, 0xee, 0x80, 0x5e, 0x81, 0x5e, 0xdf, 0x8a,
	0x3f, 0x97, 0x2c, 0x32, 0x55, 0x29, 0x1f, 0x54, 0x2d, 0x0e, 0xdd, 0x65, 0x90, 0xe1, 0x87, 0x84,
	0x09, 0xf4, 0x01, 0xce, 0xea, 0xc5, 0xca, 0x6e, 0x9a, 0x3b, 0x3c, 0x0a, 0xb7, 0xdc, 0x13, 0xa4,
	0x81, 0xd1, 0x1b, 0xe8, 0x66, 0xbc, 0xa0, 0x8f, 0x1b, 0x97, 0x3e, 0x9a, 0xdb, 0xb3, 0xab, 0xb5,
	0x2e, 0x38, 0x65, 0x82, 0xd4, 0xb2, 0xb5, 0x82, 0xf3, 0x45, 0x9e, 0x14, 0x45, 0x2b, 0xc1, 0x27,
	0xd0, 0x52, 0xca, 0xbc, 0xea, 0xc9, 0x2a, 0xe7, 0x8b, 0x23, 0xe7, 0x3d, 0x40, 0xda, 0x34, 0x1a,
	0xc0, 0xe9, 0xaa, 0x64, 0xd1, 0x4d, 0x5c, 0x05, 0xac, 0x4e, 0xd6, 0x2f, 0x05, 0x40, 0x1a, 0xfd,
	0xbf, 0x6c, 0xe8, 0x12, 0x4e, 0xbe, 0x53, 0x16, 0xcb, 0x8f, 0xa1, 0xbb, 0x83, 0x3f, 0xde, 0x53,
	0x8e, 0x31, 0xa3, 0x2c, 0x26, 0x92, 0x41, 0xef, 0xa1, 0xbb, 0xff, 0xa4, 0xe6, 0xc9, 0xbf, 0x12,
	0xd7, 0xa8, 0x75, 0x0e, 0xbd, 0x45, 0xc0, 0x9a, 0xe5, 0x5d, 0x52, 0x38, 0xab, 0x5b, 0xa3, 0x3e,
	0x18, 0xf8, 0x2b, 0xf6, 0x97, 0x77, 0xb3, 0x1b, 0xdf, 0xbb, 0x9b, 0xe2, 0xeb, 0x89, 0x6f, 0x3c,
	0x41, 0x03, 0x40, 0xad, 0xea, 0xd5, 0x97, 0x89, 0x7f, 0x8d, 0x3d, 0x43, 0x41, 0x26, 0xf4, 0xdb,
	0xf5, 0x89, 0x7f, 0x85, 0xe7, 0x73, 0xec, 0x19, 0xea, 0x41, 0x1f, 0xec, 0x7b, 0xd8, 0x33, 0x3a,
	0x53, 0xfd, 0x9b, 0x9a, 0x85, 0x3f, 0xd5, 0x67, 0xb7, 0x8f, 0xb1, 0x16, 0xd3, 0xf0, 0x54, 0x0e,
	0xfa, 0xf6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0xd8, 0x45, 0x86, 0xf0, 0x03, 0x00, 0x00,
}
