// Code generated by protoc-gen-go. DO NOT EDIT.
// source: touch.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Recognizer struct {
	Id         int64                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Recognizer *google_protobuf.Any `protobuf:"bytes,3,opt,name=recognizer" json:"recognizer,omitempty"`
}

func (m *Recognizer) Reset()                    { *m = Recognizer{} }
func (m *Recognizer) String() string            { return proto.CompactTextString(m) }
func (*Recognizer) ProtoMessage()               {}
func (*Recognizer) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Recognizer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Recognizer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Recognizer) GetRecognizer() *google_protobuf.Any {
	if m != nil {
		return m.Recognizer
	}
	return nil
}

type RecognizerList struct {
	Recognizers []*Recognizer `protobuf:"bytes,1,rep,name=recognizers" json:"recognizers,omitempty"`
}

func (m *RecognizerList) Reset()                    { *m = RecognizerList{} }
func (m *RecognizerList) String() string            { return proto.CompactTextString(m) }
func (*RecognizerList) ProtoMessage()               {}
func (*RecognizerList) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *RecognizerList) GetRecognizers() []*Recognizer {
	if m != nil {
		return m.Recognizers
	}
	return nil
}

type TapRecognizer struct {
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *TapRecognizer) Reset()                    { *m = TapRecognizer{} }
func (m *TapRecognizer) String() string            { return proto.CompactTextString(m) }
func (*TapRecognizer) ProtoMessage()               {}
func (*TapRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *TapRecognizer) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type PressRecognizer struct {
}

func (m *PressRecognizer) Reset()                    { *m = PressRecognizer{} }
func (m *PressRecognizer) String() string            { return proto.CompactTextString(m) }
func (*PressRecognizer) ProtoMessage()               {}
func (*PressRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

type PanRecognizer struct {
}

func (m *PanRecognizer) Reset()                    { *m = PanRecognizer{} }
func (m *PanRecognizer) String() string            { return proto.CompactTextString(m) }
func (*PanRecognizer) ProtoMessage()               {}
func (*PanRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func init() {
	proto.RegisterType((*Recognizer)(nil), "touch.Recognizer")
	proto.RegisterType((*RecognizerList)(nil), "touch.RecognizerList")
	proto.RegisterType((*TapRecognizer)(nil), "touch.TapRecognizer")
	proto.RegisterType((*PressRecognizer)(nil), "touch.PressRecognizer")
	proto.RegisterType((*PanRecognizer)(nil), "touch.PanRecognizer")
}

func init() { proto.RegisterFile("touch.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x49, 0xea, 0x14, 0xbf, 0xb2, 0x8e, 0x85, 0x1d, 0xaa, 0xa7, 0x12, 0x10, 0x7a, 0xca,
	0x60, 0xf3, 0x0f, 0x38, 0xf0, 0xa6, 0x50, 0x82, 0x27, 0x6f, 0x6d, 0x97, 0x75, 0x01, 0xcd, 0x57,
	0x92, 0xf4, 0x30, 0x7f, 0x8e, 0xbf, 0x54, 0x48, 0xd4, 0xf4, 0x96, 0xf7, 0xcd, 0xf3, 0xf1, 0x3e,
	0x90, 0x7b, 0x9c, 0xfa, 0xb3, 0x18, 0x2d, 0x7a, 0x64, 0x8b, 0x10, 0xee, 0xef, 0x06, 0xc4, 0xe1,
	0x43, 0x6d, 0x43, 0xd9, 0x4d, 0xa7, 0x6d, 0x6b, 0x2e, 0x91, 0xe0, 0x27, 0x00, 0xa9, 0x7a, 0x1c,
	0x8c, 0xfe, 0x52, 0x96, 0x15, 0x40, 0xf5, 0xb1, 0x24, 0x15, 0xa9, 0x33, 0x49, 0xf5, 0x91, 0x31,
	0xb8, 0x32, 0xed, 0xa7, 0x2a, 0x69, 0x45, 0xea, 0x5b, 0x19, 0xde, 0xec, 0x11, 0xc0, 0xfe, 0x5f,
	0x94, 0x59, 0x45, 0xea, 0x7c, 0xb7, 0x11, 0x71, 0x41, 0xfc, 0x2d, 0x88, 0x27, 0x73, 0x91, 0x33,
	0x8e, 0x3f, 0x43, 0x91, 0x76, 0x5e, 0xb4, 0xf3, 0x6c, 0x0f, 0x79, 0xfa, 0x77, 0x25, 0xa9, 0xb2,
	0x3a, 0xdf, 0xad, 0x45, 0xd4, 0x4f, 0xac, 0x9c, 0x53, 0xfc, 0x01, 0x96, 0x6f, 0xed, 0x38, 0x33,
	0xde, 0xc0, 0xa2, 0xc7, 0xc9, 0xf8, 0x5f, 0xe9, 0x18, 0xf8, 0x1a, 0x56, 0x8d, 0x55, 0xce, 0x25,
	0x90, 0xaf, 0x60, 0xd9, 0xb4, 0x26, 0x15, 0x87, 0xe2, 0x9d, 0x8e, 0xdd, 0x37, 0xbd, 0x79, 0xc5,
	0xfe, 0xac, 0x9b, 0x43, 0x77, 0x1d, 0xdc, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x1c,
	0x9e, 0x70, 0x41, 0x01, 0x00, 0x00,
}
