// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/overcyn/matcha/pb/view/stacknav/stacknavigator.proto

/*
Package stacknav is a generated protocol buffer package.

It is generated from these files:
	github.com/overcyn/matcha/pb/view/stacknav/stacknavigator.proto

It has these top-level messages:
	Screen
	StackNav
	StackEvent
*/
package stacknav

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Screen struct {
	Id                    int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title                 string  `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	CustomBackButtonTitle bool    `protobuf:"varint,8,opt,name=customBackButtonTitle" json:"customBackButtonTitle,omitempty"`
	BackButtonTitle       string  `protobuf:"bytes,3,opt,name=backButtonTitle" json:"backButtonTitle,omitempty"`
	BackButtonHidden      bool    `protobuf:"varint,4,opt,name=backButtonHidden" json:"backButtonHidden,omitempty"`
	TitleViewId           int64   `protobuf:"varint,5,opt,name=titleViewId" json:"titleViewId,omitempty"`
	RightViewIds          []int64 `protobuf:"varint,6,rep,packed,name=rightViewIds" json:"rightViewIds,omitempty"`
	LeftViewIds           []int64 `protobuf:"varint,7,rep,packed,name=leftViewIds" json:"leftViewIds,omitempty"`
}

func (m *Screen) Reset()                    { *m = Screen{} }
func (m *Screen) String() string            { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()               {}
func (*Screen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Screen) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Screen) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Screen) GetCustomBackButtonTitle() bool {
	if m != nil {
		return m.CustomBackButtonTitle
	}
	return false
}

func (m *Screen) GetBackButtonTitle() string {
	if m != nil {
		return m.BackButtonTitle
	}
	return ""
}

func (m *Screen) GetBackButtonHidden() bool {
	if m != nil {
		return m.BackButtonHidden
	}
	return false
}

func (m *Screen) GetTitleViewId() int64 {
	if m != nil {
		return m.TitleViewId
	}
	return 0
}

func (m *Screen) GetRightViewIds() []int64 {
	if m != nil {
		return m.RightViewIds
	}
	return nil
}

func (m *Screen) GetLeftViewIds() []int64 {
	if m != nil {
		return m.LeftViewIds
	}
	return nil
}

type StackNav struct {
	Screens   []*Screen `protobuf:"bytes,1,rep,name=screens" json:"screens,omitempty"`
	EventFunc int64     `protobuf:"varint,9,opt,name=eventFunc" json:"eventFunc,omitempty"`
}

func (m *StackNav) Reset()                    { *m = StackNav{} }
func (m *StackNav) String() string            { return proto.CompactTextString(m) }
func (*StackNav) ProtoMessage()               {}
func (*StackNav) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StackNav) GetScreens() []*Screen {
	if m != nil {
		return m.Screens
	}
	return nil
}

func (m *StackNav) GetEventFunc() int64 {
	if m != nil {
		return m.EventFunc
	}
	return 0
}

type StackEvent struct {
	Id []int64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *StackEvent) Reset()                    { *m = StackEvent{} }
func (m *StackEvent) String() string            { return proto.CompactTextString(m) }
func (*StackEvent) ProtoMessage()               {}
func (*StackEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StackEvent) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*Screen)(nil), "stacknav.Screen")
	proto.RegisterType((*StackNav)(nil), "stacknav.StackNav")
	proto.RegisterType((*StackEvent)(nil), "stacknav.StackEvent")
}

func init() {
	proto.RegisterFile("github.com/overcyn/matcha/pb/view/stacknav/stacknavigator.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0x69, 0xeb, 0xb6, 0xee, 0x9b, 0xe8, 0x08, 0x0a, 0x39, 0x4c, 0x28, 0x3d, 0x95, 0x1d,
	0x5a, 0x50, 0xef, 0x42, 0x41, 0xd1, 0x83, 0x22, 0xdd, 0xf0, 0xe0, 0x2d, 0x4d, 0xe3, 0x16, 0xb6,
	0x25, 0xa3, 0xfd, 0xda, 0xe1, 0xbf, 0xb3, 0xbf, 0x54, 0x9a, 0xd2, 0x6e, 0x4e, 0x6f, 0xf9, 0x7e,
	0x79, 0x3c, 0x1e, 0xef, 0xc1, 0xc3, 0x42, 0xe2, 0xb2, 0x4c, 0x43, 0xae, 0x37, 0x91, 0xae, 0x44,
	0xce, 0xbf, 0x55, 0xb4, 0x61, 0xc8, 0x97, 0x2c, 0xda, 0xa6, 0x51, 0x25, 0xc5, 0x2e, 0x2a, 0x90,
	0xf1, 0x95, 0x62, 0x55, 0xf7, 0x90, 0x0b, 0x86, 0x3a, 0x0f, 0xb7, 0xb9, 0x46, 0x4d, 0xdc, 0x96,
	0xfa, 0x7b, 0x1b, 0xfa, 0x33, 0x9e, 0x0b, 0xa1, 0xc8, 0x05, 0xd8, 0x32, 0xa3, 0x96, 0x67, 0x05,
	0x4e, 0x62, 0xcb, 0x8c, 0x5c, 0x41, 0x0f, 0x25, 0xae, 0x05, 0xb5, 0x3d, 0x2b, 0x18, 0x26, 0xcd,
	0x41, 0xee, 0xe1, 0x9a, 0x97, 0x05, 0xea, 0x4d, 0xcc, 0xf8, 0x2a, 0x2e, 0x11, 0xb5, 0x9a, 0x1b,
	0x95, 0xeb, 0x59, 0x81, 0x9b, 0xfc, 0xff, 0x49, 0x02, 0xb8, 0x4c, 0x4f, 0xf4, 0x8e, 0x71, 0x3d,
	0xc5, 0x64, 0x0a, 0xe3, 0x03, 0x7a, 0x96, 0x59, 0x26, 0x14, 0x3d, 0x33, 0xd6, 0x7f, 0x38, 0xf1,
	0x60, 0x64, 0x42, 0x7d, 0x48, 0xb1, 0x7b, 0xc9, 0x68, 0xcf, 0x44, 0x3f, 0x46, 0xc4, 0x87, 0xf3,
	0x5c, 0x2e, 0x96, 0xd8, 0x9c, 0x05, 0xed, 0x7b, 0x4e, 0xe0, 0x24, 0xbf, 0x58, 0xed, 0xb2, 0x16,
	0x5f, 0x9d, 0x64, 0x60, 0x24, 0xc7, 0xc8, 0x9f, 0x83, 0x3b, 0xab, 0x0b, 0x7b, 0x63, 0x15, 0x99,
	0xc2, 0xa0, 0x30, 0x7d, 0x15, 0xd4, 0xf2, 0x9c, 0x60, 0x74, 0x3b, 0x0e, 0xdb, 0x32, 0xc3, 0xa6,
	0xc8, 0xa4, 0x15, 0x90, 0x09, 0x0c, 0x45, 0x25, 0x14, 0x3e, 0x95, 0x8a, 0xd3, 0xa1, 0x49, 0x77,
	0x00, 0xfe, 0x04, 0xc0, 0xb8, 0x3e, 0xd6, 0xa4, 0x6b, 0xdf, 0x69, 0xda, 0x8f, 0x6f, 0x3e, 0xbb,
	0x91, 0xf6, 0xf6, 0xf8, 0xd5, 0xac, 0xfb, 0x1e, 0xb7, 0x31, 0xd2, 0xbe, 0x19, 0xf2, 0xee, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x92, 0x4a, 0x38, 0x31, 0x0b, 0x02, 0x00, 0x00,
}
