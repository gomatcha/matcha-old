// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/overcyn/matcha/pb/view/tabscreen/tabscreen.proto

/*
Package tabscreen is a generated protocol buffer package.

It is generated from these files:
	github.com/overcyn/matcha/pb/view/tabscreen/tabscreen.proto

It has these top-level messages:
	ChildView
	View
	Event
*/
package tabscreen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import matcha "github.com/overcyn/matcha/pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChildView struct {
	Id           int64         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title        string        `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Icon         *matcha.Image `protobuf:"bytes,3,opt,name=icon" json:"icon,omitempty"`
	SelectedIcon *matcha.Image `protobuf:"bytes,4,opt,name=selectedIcon" json:"selectedIcon,omitempty"`
	Badge        string        `protobuf:"bytes,5,opt,name=badge" json:"badge,omitempty"`
}

func (m *ChildView) Reset()                    { *m = ChildView{} }
func (m *ChildView) String() string            { return proto.CompactTextString(m) }
func (*ChildView) ProtoMessage()               {}
func (*ChildView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChildView) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChildView) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChildView) GetIcon() *matcha.Image {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *ChildView) GetSelectedIcon() *matcha.Image {
	if m != nil {
		return m.SelectedIcon
	}
	return nil
}

func (m *ChildView) GetBadge() string {
	if m != nil {
		return m.Badge
	}
	return ""
}

type View struct {
	Screens       []*ChildView `protobuf:"bytes,1,rep,name=screens" json:"screens,omitempty"`
	SelectedIndex int64        `protobuf:"varint,2,opt,name=selectedIndex" json:"selectedIndex,omitempty"`
}

func (m *View) Reset()                    { *m = View{} }
func (m *View) String() string            { return proto.CompactTextString(m) }
func (*View) ProtoMessage()               {}
func (*View) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *View) GetScreens() []*ChildView {
	if m != nil {
		return m.Screens
	}
	return nil
}

func (m *View) GetSelectedIndex() int64 {
	if m != nil {
		return m.SelectedIndex
	}
	return 0
}

type Event struct {
	SelectedIndex int64 `protobuf:"varint,1,opt,name=selectedIndex" json:"selectedIndex,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Event) GetSelectedIndex() int64 {
	if m != nil {
		return m.SelectedIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*ChildView)(nil), "matcha.view.tabscreen.ChildView")
	proto.RegisterType((*View)(nil), "matcha.view.tabscreen.View")
	proto.RegisterType((*Event)(nil), "matcha.view.tabscreen.Event")
}

func init() {
	proto.RegisterFile("github.com/overcyn/matcha/pb/view/tabscreen/tabscreen.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x39, 0x4b, 0xc4, 0x40,
	0x14, 0xc7, 0x99, 0x1c, 0x4a, 0x66, 0x5d, 0xc1, 0x41, 0x21, 0xd8, 0x18, 0x83, 0x45, 0x1a, 0x27,
	0xb8, 0x76, 0xda, 0xad, 0x58, 0x6c, 0x21, 0x48, 0x14, 0x0b, 0xbb, 0x39, 0x1e, 0xc9, 0x40, 0x8e,
	0x25, 0x19, 0xb3, 0xfa, 0x61, 0x6c, 0xfc, 0xa4, 0x92, 0x19, 0x8d, 0x2c, 0x86, 0xed, 0xf2, 0xde,
	0xfb, 0xe5, 0x7f, 0x0c, 0xbe, 0xcd, 0x95, 0x2e, 0xde, 0x38, 0x15, 0x4d, 0x95, 0x36, 0x3d, 0xb4,
	0xe2, 0xa3, 0x4e, 0x2b, 0xa6, 0x45, 0xc1, 0xd2, 0x35, 0x4f, 0x7b, 0x05, 0x9b, 0x54, 0x33, 0xde,
	0x89, 0x16, 0xa0, 0xfe, 0xfb, 0xa2, 0xeb, 0xb6, 0xd1, 0x0d, 0x39, 0xb1, 0x24, 0x1d, 0x30, 0x3a,
	0x1e, 0x4f, 0x93, 0x9d, 0x9a, 0xaa, 0x62, 0x39, 0x58, 0x81, 0xf8, 0x13, 0xe1, 0xe0, 0xae, 0x50,
	0xa5, 0x7c, 0x51, 0xb0, 0x21, 0x87, 0xd8, 0x51, 0x32, 0x44, 0x11, 0x4a, 0xdc, 0xcc, 0x51, 0x92,
	0x1c, 0x63, 0x5f, 0x2b, 0x5d, 0x42, 0xe8, 0x44, 0x28, 0x09, 0x32, 0x3b, 0x90, 0x73, 0xec, 0x29,
	0xd1, 0xd4, 0xa1, 0x1b, 0xa1, 0x64, 0xb6, 0x98, 0xd3, 0x9f, 0x0c, 0xab, 0x41, 0x36, 0x33, 0x27,
	0x72, 0x85, 0x0f, 0x3a, 0x28, 0x41, 0x68, 0x90, 0xab, 0x01, 0xf5, 0xa6, 0xd0, 0x2d, 0x64, 0xf0,
	0xe2, 0x4c, 0xe6, 0x10, 0xfa, 0xd6, 0xcb, 0x0c, 0x71, 0x81, 0x3d, 0x93, 0xec, 0x06, 0xef, 0xdb,
	0x6e, 0x5d, 0x88, 0x22, 0x37, 0x99, 0x2d, 0x22, 0x3a, 0x59, 0x9d, 0x8e, 0x65, 0xb2, 0xdf, 0x1f,
	0xc8, 0x05, 0x9e, 0x8f, 0x4e, 0xb5, 0x84, 0x77, 0xd3, 0xc6, 0xcd, 0xb6, 0x97, 0xf1, 0x25, 0xf6,
	0xef, 0x7b, 0xa8, 0xf5, 0x7f, 0x1c, 0x4d, 0xe0, 0xcb, 0xb3, 0xd7, 0x60, 0x34, 0xfd, 0x72, 0x8e,
	0x1e, 0x4c, 0x98, 0x67, 0xc6, 0x9f, 0xcc, 0xe6, 0x71, 0xc9, 0xf7, 0xcc, 0x03, 0x5f, 0x7f, 0x07,
	0x00, 0x00, 0xff, 0xff, 0xfd, 0x93, 0x6b, 0x06, 0xe0, 0x01, 0x00, 0x00,
}
