// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/overcyn/mochi/pb/view/stacknavigator/stacknavigator.proto

/*
Package stacknavigator is a generated protocol buffer package.

It is generated from these files:
	github.com/overcyn/mochi/pb/view/stacknavigator/stacknavigator.proto

It has these top-level messages:
	Screen
	StackNavigator
*/
package stacknavigator

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/overcyn/mochi/pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Screen struct {
	Id                    int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title                 string  `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	CustomBackButtonTitle bool    `protobuf:"varint,8,opt,name=customBackButtonTitle" json:"customBackButtonTitle,omitempty"`
	BackButtonTitle       string  `protobuf:"bytes,3,opt,name=backButtonTitle" json:"backButtonTitle,omitempty"`
	BackButtonHidden      bool    `protobuf:"varint,4,opt,name=backButtonHidden" json:"backButtonHidden,omitempty"`
	TitleViewId           int64   `protobuf:"varint,5,opt,name=titleViewId" json:"titleViewId,omitempty"`
	RightViewIds          []int64 `protobuf:"varint,6,rep,packed,name=rightViewIds" json:"rightViewIds,omitempty"`
	LeftViewIds           []int64 `protobuf:"varint,7,rep,packed,name=leftViewIds" json:"leftViewIds,omitempty"`
}

func (m *Screen) Reset()                    { *m = Screen{} }
func (m *Screen) String() string            { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()               {}
func (*Screen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Screen) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Screen) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Screen) GetCustomBackButtonTitle() bool {
	if m != nil {
		return m.CustomBackButtonTitle
	}
	return false
}

func (m *Screen) GetBackButtonTitle() string {
	if m != nil {
		return m.BackButtonTitle
	}
	return ""
}

func (m *Screen) GetBackButtonHidden() bool {
	if m != nil {
		return m.BackButtonHidden
	}
	return false
}

func (m *Screen) GetTitleViewId() int64 {
	if m != nil {
		return m.TitleViewId
	}
	return 0
}

func (m *Screen) GetRightViewIds() []int64 {
	if m != nil {
		return m.RightViewIds
	}
	return nil
}

func (m *Screen) GetLeftViewIds() []int64 {
	if m != nil {
		return m.LeftViewIds
	}
	return nil
}

type StackNavigator struct {
	Screens []*Screen `protobuf:"bytes,1,rep,name=screens" json:"screens,omitempty"`
}

func (m *StackNavigator) Reset()                    { *m = StackNavigator{} }
func (m *StackNavigator) String() string            { return proto.CompactTextString(m) }
func (*StackNavigator) ProtoMessage()               {}
func (*StackNavigator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StackNavigator) GetScreens() []*Screen {
	if m != nil {
		return m.Screens
	}
	return nil
}

func init() {
	proto.RegisterType((*Screen)(nil), "stacknavigator.Screen")
	proto.RegisterType((*StackNavigator)(nil), "stacknavigator.StackNavigator")
}

func init() {
	proto.RegisterFile("github.com/overcyn/mochi/pb/view/stacknavigator/stacknavigator.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4e, 0xb3, 0x40,
	0x14, 0xc5, 0x03, 0x7c, 0xfd, 0xf3, 0xdd, 0x9a, 0x6a, 0x26, 0xd6, 0x4c, 0x5c, 0x4d, 0x58, 0x4d,
	0x34, 0x01, 0xa3, 0x3e, 0x01, 0x71, 0xa1, 0x0b, 0x8d, 0xa1, 0xc6, 0x85, 0x3b, 0x18, 0x46, 0xb8,
	0x69, 0x61, 0x1a, 0x18, 0x68, 0x7c, 0x9d, 0x3e, 0xa9, 0x61, 0x48, 0xb5, 0xa0, 0x71, 0x79, 0x7e,
	0x73, 0xe6, 0xe4, 0xe6, 0x1c, 0xb8, 0x4b, 0x51, 0x67, 0x75, 0xec, 0x09, 0x95, 0xfb, 0xaa, 0x91,
	0xa5, 0xf8, 0x28, 0xfc, 0x5c, 0x89, 0x0c, 0xfd, 0x4d, 0xec, 0x37, 0x28, 0xb7, 0x7e, 0xa5, 0x23,
	0xb1, 0x2a, 0xa2, 0x06, 0xd3, 0x48, 0xab, 0x72, 0x20, 0xbd, 0x4d, 0xa9, 0xb4, 0x22, 0xf3, 0x3e,
	0x3d, 0xbf, 0xfc, 0x2b, 0x15, 0xf3, 0x28, 0x95, 0x6d, 0x74, 0xf7, 0xd9, 0xdd, 0xd9, 0x30, 0x5e,
	0x8a, 0x52, 0xca, 0x82, 0xcc, 0xc1, 0xc6, 0x84, 0x5a, 0xcc, 0xe2, 0x4e, 0x68, 0x63, 0x42, 0x4e,
	0x61, 0xa4, 0x51, 0xaf, 0x25, 0xb5, 0x99, 0xc5, 0xff, 0x87, 0x9d, 0x20, 0xb7, 0xb0, 0x10, 0x75,
	0xa5, 0x55, 0x1e, 0x44, 0x62, 0x15, 0xd4, 0x5a, 0xab, 0xe2, 0xc5, 0xb8, 0xa6, 0xcc, 0xe2, 0xd3,
	0xf0, 0xf7, 0x47, 0xc2, 0xe1, 0x38, 0x1e, 0xf8, 0x1d, 0x93, 0x3a, 0xc4, 0xe4, 0x02, 0x4e, 0xbe,
	0xd1, 0x3d, 0x26, 0x89, 0x2c, 0xe8, 0x3f, 0x13, 0xfd, 0x83, 0x13, 0x06, 0x33, 0x73, 0xd4, 0x2b,
	0xca, 0xed, 0x43, 0x42, 0x47, 0xe6, 0xf4, 0x43, 0x44, 0x5c, 0x38, 0x2a, 0x31, 0xcd, 0x74, 0x27,
	0x2b, 0x3a, 0x66, 0x0e, 0x77, 0xc2, 0x1e, 0x6b, 0x53, 0xd6, 0xf2, 0xfd, 0xcb, 0x32, 0x31, 0x96,
	0x43, 0xe4, 0x06, 0x30, 0x5f, 0xb6, 0x1d, 0x3f, 0xed, 0x3b, 0x26, 0x57, 0x30, 0xa9, 0x4c, 0x6b,
	0x15, 0xb5, 0x98, 0xc3, 0x67, 0xd7, 0x67, 0xde, 0x60, 0x9b, 0xae, 0xd4, 0x70, 0x6f, 0x0b, 0xf8,
	0xdb, 0x60, 0xa7, 0x9d, 0xbd, 0x78, 0x6c, 0x57, 0x79, 0x0e, 0xfa, 0xd9, 0xf1, 0xd8, 0x2c, 0x73,
	0xf3, 0x19, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xbb, 0x9e, 0x7c, 0x1e, 0x02, 0x00, 0x00,
}
