// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/overcyn/mochi/pb/imageview.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	github.com/overcyn/mochi/pb/imageview.proto
	github.com/overcyn/mochi/pb/layout.proto
	github.com/overcyn/mochi/pb/paint.proto
	github.com/overcyn/mochi/pb/scrollview.proto
	github.com/overcyn/mochi/pb/text.proto
	github.com/overcyn/mochi/pb/touch.proto
	github.com/overcyn/mochi/pb/view.proto

It has these top-level messages:
	Image
	ImageView
	Point
	Rect
	Insets
	Guide
	PaintStyle
	ScrollView
	SizeFunc
	Text
	Font
	Color
	TextStyle
	Recognizer
	RecognizerList
	TapRecognizer
	TapEvent
	PressRecognizer
	PressEvent
	PanRecognizer
	Node
	Root
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResizeMode int32

const (
	ResizeMode_FIT     ResizeMode = 0
	ResizeMode_FILL    ResizeMode = 1
	ResizeMode_STRETCH ResizeMode = 2
	ResizeMode_CENTER  ResizeMode = 3
)

var ResizeMode_name = map[int32]string{
	0: "FIT",
	1: "FILL",
	2: "STRETCH",
	3: "CENTER",
}
var ResizeMode_value = map[string]int32{
	"FIT":     0,
	"FILL":    1,
	"STRETCH": 2,
	"CENTER":  3,
}

func (x ResizeMode) String() string {
	return proto.EnumName(ResizeMode_name, int32(x))
}
func (ResizeMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Image struct {
	Width  int64  `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Stride int64  `protobuf:"varint,4,opt,name=stride" json:"stride,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Image) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetStride() int64 {
	if m != nil {
		return m.Stride
	}
	return 0
}

func (m *Image) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ImageView struct {
	Image      *Image     `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	ResizeMode ResizeMode `protobuf:"varint,2,opt,name=resizeMode,enum=imageview.ResizeMode" json:"resizeMode,omitempty"`
	Tint       *Color     `protobuf:"bytes,3,opt,name=tint" json:"tint,omitempty"`
}

func (m *ImageView) Reset()                    { *m = ImageView{} }
func (m *ImageView) String() string            { return proto.CompactTextString(m) }
func (*ImageView) ProtoMessage()               {}
func (*ImageView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ImageView) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageView) GetResizeMode() ResizeMode {
	if m != nil {
		return m.ResizeMode
	}
	return ResizeMode_FIT
}

func (m *ImageView) GetTint() *Color {
	if m != nil {
		return m.Tint
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "imageview.Image")
	proto.RegisterType((*ImageView)(nil), "imageview.ImageView")
	proto.RegisterEnum("imageview.ResizeMode", ResizeMode_name, ResizeMode_value)
}

func init() { proto.RegisterFile("github.com/overcyn/mochi/pb/imageview.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x50, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x7e, 0xf3, 0xfd, 0x76, 0x22, 0x25, 0x0c, 0x2a, 0xc1, 0x8b, 0xa5, 0x87, 0x52, 0x14, 0x12,
	0x88, 0x08, 0x9e, 0x1b, 0x52, 0x0c, 0xb4, 0x22, 0x6b, 0xf0, 0xe0, 0x2d, 0x1f, 0x4b, 0xb2, 0x60,
	0xba, 0x21, 0x5d, 0x1b, 0xf5, 0x2f, 0xf8, 0x2f, 0xfc, 0xa5, 0x92, 0x8d, 0xb4, 0x3d, 0x79, 0x9b,
	0xe7, 0x8b, 0x67, 0x66, 0xe0, 0xba, 0x64, 0xa2, 0x7a, 0xcb, 0xbc, 0x9c, 0xd7, 0x3e, 0xdf, 0xd1,
	0x36, 0xff, 0xd8, 0xf8, 0x35, 0xcf, 0x2b, 0xe6, 0x37, 0x99, 0xcf, 0xea, 0xb4, 0xa4, 0x3b, 0x46,
	0x3b, 0xaf, 0x69, 0xb9, 0xe0, 0x38, 0xda, 0x13, 0x17, 0xb3, 0xbf, 0x72, 0x82, 0xbe, 0x8b, 0x21,
	0x32, 0x4d, 0xc1, 0x88, 0xfb, 0x10, 0x9e, 0x82, 0xd1, 0xb1, 0x42, 0x54, 0xae, 0x32, 0x51, 0xe6,
	0x1a, 0x19, 0x00, 0x9e, 0x83, 0x59, 0x51, 0x56, 0x56, 0xc2, 0x55, 0x25, 0xfd, 0x8b, 0x7a, 0x7e,
	0x2b, 0x5a, 0x56, 0x50, 0x57, 0x1f, 0xf8, 0x01, 0x21, 0x82, 0x5e, 0xa4, 0x22, 0x75, 0xb5, 0x89,
	0x32, 0x3f, 0x21, 0x72, 0x9e, 0x7e, 0x29, 0x30, 0x92, 0x1d, 0xcf, 0x8c, 0x76, 0x38, 0x03, 0x43,
	0x6e, 0x29, 0x7b, 0xec, 0xc0, 0xf1, 0x0e, 0x47, 0x48, 0x13, 0x19, 0x64, 0xbc, 0x05, 0x68, 0xe9,
	0x96, 0x7d, 0xd2, 0x35, 0x2f, 0xa8, 0x6c, 0x1f, 0x07, 0x67, 0x47, 0x66, 0xb2, 0x17, 0xc9, 0x91,
	0x11, 0x2f, 0x41, 0x17, 0x6c, 0x23, 0xe4, 0x02, 0x76, 0x60, 0x7b, 0xf2, 0xd4, 0x90, 0xbf, 0xf2,
	0x96, 0x48, 0xe1, 0xea, 0x0e, 0xe0, 0x10, 0x45, 0x0b, 0xb4, 0x65, 0x9c, 0x38, 0xff, 0xf0, 0x3f,
	0xe8, 0xcb, 0x78, 0xb5, 0x72, 0x14, 0xb4, 0xc1, 0x7a, 0x4a, 0x48, 0x94, 0x84, 0xf7, 0x8e, 0x8a,
	0x00, 0x66, 0x18, 0x3d, 0x24, 0x11, 0x71, 0xb4, 0xc5, 0xf8, 0x45, 0x6d, 0xb2, 0x6f, 0xd5, 0x5a,
	0xf7, 0x6f, 0x7c, 0x5c, 0x64, 0xa6, 0xfc, 0xe0, 0xcd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32,
	0x45, 0x3f, 0x97, 0xa3, 0x01, 0x00, 0x00,
}
