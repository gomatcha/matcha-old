// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gomatcha.io/matcha/pb/touch/touch2.proto

/*
Package touch is a generated protocol buffer package.

It is generated from these files:
	gomatcha.io/matcha/pb/touch/touch2.proto

It has these top-level messages:
	Recognizer
	RecognizerList
	ButtonRecognizer
	ButtonEvent
	TapRecognizer
	TapEvent
	PressRecognizer
	PressEvent
*/
package touch

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"
import matcha_layout "gomatcha.io/matcha/pb/layout"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventKind int32

const (
	EventKind_EVENT_KIND_POSSIBLE   EventKind = 0
	EventKind_EVENT_KIND_CHANGED    EventKind = 1
	EventKind_EVENT_KIND_FAILED     EventKind = 2
	EventKind_EVENT_KIND_RECOGNIZED EventKind = 3
)

var EventKind_name = map[int32]string{
	0: "EVENT_KIND_POSSIBLE",
	1: "EVENT_KIND_CHANGED",
	2: "EVENT_KIND_FAILED",
	3: "EVENT_KIND_RECOGNIZED",
}
var EventKind_value = map[string]int32{
	"EVENT_KIND_POSSIBLE":   0,
	"EVENT_KIND_CHANGED":    1,
	"EVENT_KIND_FAILED":     2,
	"EVENT_KIND_RECOGNIZED": 3,
}

func (x EventKind) String() string {
	return proto.EnumName(EventKind_name, int32(x))
}
func (EventKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Recognizer struct {
	Id         int64                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Recognizer *google_protobuf.Any `protobuf:"bytes,3,opt,name=recognizer" json:"recognizer,omitempty"`
}

func (m *Recognizer) Reset()                    { *m = Recognizer{} }
func (m *Recognizer) String() string            { return proto.CompactTextString(m) }
func (*Recognizer) ProtoMessage()               {}
func (*Recognizer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Recognizer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Recognizer) GetRecognizer() *google_protobuf.Any {
	if m != nil {
		return m.Recognizer
	}
	return nil
}

type RecognizerList struct {
	Recognizers []*Recognizer `protobuf:"bytes,1,rep,name=recognizers" json:"recognizers,omitempty"`
}

func (m *RecognizerList) Reset()                    { *m = RecognizerList{} }
func (m *RecognizerList) String() string            { return proto.CompactTextString(m) }
func (*RecognizerList) ProtoMessage()               {}
func (*RecognizerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RecognizerList) GetRecognizers() []*Recognizer {
	if m != nil {
		return m.Recognizers
	}
	return nil
}

type ButtonRecognizer struct {
	OnEvent       int64 `protobuf:"varint,1,opt,name=onEvent" json:"onEvent,omitempty"`
	IgnoresScroll bool  `protobuf:"varint,2,opt,name=ignoresScroll" json:"ignoresScroll,omitempty"`
}

func (m *ButtonRecognizer) Reset()                    { *m = ButtonRecognizer{} }
func (m *ButtonRecognizer) String() string            { return proto.CompactTextString(m) }
func (*ButtonRecognizer) ProtoMessage()               {}
func (*ButtonRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ButtonRecognizer) GetOnEvent() int64 {
	if m != nil {
		return m.OnEvent
	}
	return 0
}

func (m *ButtonRecognizer) GetIgnoresScroll() bool {
	if m != nil {
		return m.IgnoresScroll
	}
	return false
}

type ButtonEvent struct {
	Timestamp *google_protobuf2.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Inside    bool                        `protobuf:"varint,3,opt,name=inside" json:"inside,omitempty"`
	Kind      EventKind                   `protobuf:"varint,4,opt,name=kind,enum=matcha.touch.EventKind" json:"kind,omitempty"`
}

func (m *ButtonEvent) Reset()                    { *m = ButtonEvent{} }
func (m *ButtonEvent) String() string            { return proto.CompactTextString(m) }
func (*ButtonEvent) ProtoMessage()               {}
func (*ButtonEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ButtonEvent) GetTimestamp() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ButtonEvent) GetInside() bool {
	if m != nil {
		return m.Inside
	}
	return false
}

func (m *ButtonEvent) GetKind() EventKind {
	if m != nil {
		return m.Kind
	}
	return EventKind_EVENT_KIND_POSSIBLE
}

type TapRecognizer struct {
	Count          int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	RecognizedFunc int64 `protobuf:"varint,2,opt,name=recognizedFunc" json:"recognizedFunc,omitempty"`
}

func (m *TapRecognizer) Reset()                    { *m = TapRecognizer{} }
func (m *TapRecognizer) String() string            { return proto.CompactTextString(m) }
func (*TapRecognizer) ProtoMessage()               {}
func (*TapRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TapRecognizer) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TapRecognizer) GetRecognizedFunc() int64 {
	if m != nil {
		return m.RecognizedFunc
	}
	return 0
}

type TapEvent struct {
	Timestamp *google_protobuf2.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Position  *matcha_layout.Point        `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (m *TapEvent) Reset()                    { *m = TapEvent{} }
func (m *TapEvent) String() string            { return proto.CompactTextString(m) }
func (*TapEvent) ProtoMessage()               {}
func (*TapEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TapEvent) GetTimestamp() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TapEvent) GetPosition() *matcha_layout.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

type PressRecognizer struct {
	MinDuration *google_protobuf1.Duration `protobuf:"bytes,1,opt,name=minDuration" json:"minDuration,omitempty"`
	FuncId      int64                      `protobuf:"varint,2,opt,name=funcId" json:"funcId,omitempty"`
}

func (m *PressRecognizer) Reset()                    { *m = PressRecognizer{} }
func (m *PressRecognizer) String() string            { return proto.CompactTextString(m) }
func (*PressRecognizer) ProtoMessage()               {}
func (*PressRecognizer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PressRecognizer) GetMinDuration() *google_protobuf1.Duration {
	if m != nil {
		return m.MinDuration
	}
	return nil
}

func (m *PressRecognizer) GetFuncId() int64 {
	if m != nil {
		return m.FuncId
	}
	return 0
}

type PressEvent struct {
	Timestamp *google_protobuf2.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Position  *matcha_layout.Point        `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Kind      EventKind                   `protobuf:"varint,3,opt,name=kind,enum=matcha.touch.EventKind" json:"kind,omitempty"`
	Duration  *google_protobuf1.Duration  `protobuf:"bytes,4,opt,name=duration" json:"duration,omitempty"`
}

func (m *PressEvent) Reset()                    { *m = PressEvent{} }
func (m *PressEvent) String() string            { return proto.CompactTextString(m) }
func (*PressEvent) ProtoMessage()               {}
func (*PressEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PressEvent) GetTimestamp() *google_protobuf2.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PressEvent) GetPosition() *matcha_layout.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *PressEvent) GetKind() EventKind {
	if m != nil {
		return m.Kind
	}
	return EventKind_EVENT_KIND_POSSIBLE
}

func (m *PressEvent) GetDuration() *google_protobuf1.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func init() {
	proto.RegisterType((*Recognizer)(nil), "matcha.touch.Recognizer")
	proto.RegisterType((*RecognizerList)(nil), "matcha.touch.RecognizerList")
	proto.RegisterType((*ButtonRecognizer)(nil), "matcha.touch.ButtonRecognizer")
	proto.RegisterType((*ButtonEvent)(nil), "matcha.touch.ButtonEvent")
	proto.RegisterType((*TapRecognizer)(nil), "matcha.touch.TapRecognizer")
	proto.RegisterType((*TapEvent)(nil), "matcha.touch.TapEvent")
	proto.RegisterType((*PressRecognizer)(nil), "matcha.touch.PressRecognizer")
	proto.RegisterType((*PressEvent)(nil), "matcha.touch.PressEvent")
	proto.RegisterEnum("matcha.touch.EventKind", EventKind_name, EventKind_value)
}

func init() { proto.RegisterFile("gomatcha.io/matcha/pb/touch/touch2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0x5b, 0xd2, 0x31, 0x09, 0x61, 0x69, 0x1b, 0x27, 0x07, 0x88, 0x2c, 0x84, 0x0c,
	0x48, 0x0e, 0x0a, 0x20, 0x21, 0x38, 0x25, 0x8d, 0x5b, 0xa2, 0xa6, 0x69, 0xb4, 0x89, 0x38, 0xf4,
	0x52, 0x39, 0xb6, 0x93, 0xae, 0x48, 0x76, 0x2d, 0x7b, 0x5d, 0x29, 0x7c, 0x03, 0x5f, 0xc1, 0x77,
	0xf1, 0x31, 0x28, 0xeb, 0x8d, 0xb3, 0x4d, 0x11, 0x42, 0x42, 0xea, 0xc5, 0xf6, 0xcc, 0x7b, 0x3b,
	0xf3, 0xde, 0xec, 0x18, 0xec, 0x19, 0x5b, 0x78, 0xdc, 0xbf, 0xf6, 0x1c, 0xc2, 0x9a, 0xd9, 0x57,
	0x33, 0x9a, 0x34, 0x39, 0x4b, 0xfd, 0xeb, 0xec, 0xd9, 0x72, 0xa2, 0x98, 0x71, 0x86, 0x1e, 0x49,
	0x9e, 0x48, 0xd6, 0x6b, 0x33, 0xc6, 0x66, 0xf3, 0xb0, 0x29, 0xb0, 0x49, 0x3a, 0x6d, 0x7a, 0x74,
	0x99, 0x11, 0xeb, 0xcf, 0xb6, 0xa1, 0x20, 0x8d, 0x3d, 0x4e, 0x18, 0x95, 0xf8, 0xf3, 0x6d, 0x9c,
	0x93, 0x45, 0x98, 0x70, 0x6f, 0x11, 0x49, 0xc2, 0xab, 0x3f, 0x6b, 0x9a, 0x7b, 0x4b, 0x96, 0x72,
	0xf9, 0xca, 0xa8, 0x16, 0x06, 0xc0, 0xa1, 0xcf, 0x66, 0x94, 0x7c, 0x0f, 0x63, 0x54, 0x86, 0x02,
	0x09, 0x4c, 0xad, 0xa1, 0xd9, 0x3a, 0x2e, 0x90, 0x00, 0xbd, 0x07, 0x88, 0x73, 0xd4, 0xd4, 0x1b,
	0x9a, 0x6d, 0xb4, 0x0e, 0x9c, 0xac, 0xbd, 0xb3, 0x6e, 0xef, 0xb4, 0xe9, 0x12, 0x2b, 0x3c, 0xab,
	0x0f, 0xe5, 0x4d, 0xcd, 0x3e, 0x49, 0x38, 0xfa, 0x04, 0xc6, 0x06, 0x4f, 0x4c, 0xad, 0xa1, 0xdb,
	0x46, 0xcb, 0x74, 0xd4, 0x81, 0x38, 0x9b, 0x23, 0x58, 0x25, 0x5b, 0x18, 0x2a, 0x9d, 0x94, 0x73,
	0x46, 0x15, 0x9d, 0x26, 0x3c, 0x64, 0xd4, 0xbd, 0x09, 0x29, 0x97, 0x62, 0xd7, 0x21, 0x7a, 0x01,
	0x25, 0x32, 0xa3, 0x2c, 0x0e, 0x93, 0x91, 0x1f, 0xb3, 0xf9, 0xdc, 0x2c, 0x34, 0x34, 0xbb, 0x88,
	0x6f, 0x27, 0xad, 0x1f, 0x1a, 0x18, 0x59, 0xd1, 0xec, 0xd4, 0x47, 0xd8, 0xcf, 0x67, 0x28, 0x2a,
	0x1a, 0xad, 0xfa, 0x1d, 0x9b, 0xe3, 0x35, 0x03, 0x6f, 0xc8, 0xe8, 0x08, 0xf6, 0x08, 0x4d, 0x48,
	0x10, 0x8a, 0xe9, 0x14, 0xb1, 0x8c, 0xd0, 0x1b, 0xd8, 0xf9, 0x46, 0x68, 0x60, 0xee, 0x34, 0x34,
	0xbb, 0xdc, 0xaa, 0xde, 0xb6, 0x2a, 0x9a, 0x9e, 0x11, 0x1a, 0x60, 0x41, 0xb2, 0xce, 0xa1, 0x34,
	0xf6, 0x22, 0xc5, 0xdf, 0x01, 0xec, 0xfa, 0x2c, 0xcd, 0xdd, 0x65, 0x01, 0x7a, 0x09, 0xe5, 0x7c,
	0x30, 0xc1, 0x49, 0x4a, 0x7d, 0x61, 0x4e, 0xc7, 0x5b, 0x59, 0xeb, 0x06, 0x8a, 0x63, 0x2f, 0xfa,
	0x5f, 0x67, 0x6f, 0xa1, 0x18, 0xb1, 0x84, 0xac, 0xf6, 0x4e, 0xf4, 0x59, 0xdd, 0xbc, 0x74, 0x21,
	0x37, 0x68, 0xc8, 0x08, 0xe5, 0x38, 0x67, 0x59, 0x53, 0x78, 0x3c, 0x8c, 0xc3, 0x24, 0x51, 0x8c,
	0x7c, 0x06, 0x63, 0x41, 0x68, 0x57, 0xee, 0xaf, 0x14, 0x50, 0xbb, 0x23, 0x60, 0x4d, 0xc0, 0x2a,
	0x7b, 0x35, 0xdb, 0x69, 0x4a, 0xfd, 0x5e, 0x20, 0x7d, 0xca, 0xc8, 0xfa, 0xa5, 0x01, 0x88, 0x46,
	0xf7, 0x6e, 0x31, 0xbf, 0x56, 0xfd, 0x1f, 0xae, 0x15, 0x7d, 0x80, 0xe2, 0xfa, 0xcf, 0x15, 0x7b,
	0xf0, 0x57, 0xe7, 0x39, 0xf5, 0x35, 0x85, 0xfd, 0xbc, 0x12, 0xaa, 0xc2, 0x53, 0xf7, 0xab, 0x3b,
	0x18, 0x5f, 0x9d, 0xf5, 0x06, 0xdd, 0xab, 0xe1, 0xc5, 0x68, 0xd4, 0xeb, 0xf4, 0xdd, 0xca, 0x03,
	0x74, 0x04, 0x48, 0x01, 0x8e, 0xbf, 0xb4, 0x07, 0xa7, 0x6e, 0xb7, 0xa2, 0xa1, 0x43, 0x78, 0xa2,
	0xe4, 0x4f, 0xda, 0xbd, 0xbe, 0xdb, 0xad, 0x14, 0x50, 0x0d, 0x0e, 0x95, 0x34, 0x76, 0x8f, 0x2f,
	0x4e, 0x07, 0xbd, 0x4b, 0xb7, 0x5b, 0xd1, 0x3b, 0xd5, 0xcb, 0x5d, 0xa1, 0xff, 0x67, 0xa1, 0x74,
	0x2e, 0xec, 0x0c, 0x3b, 0xe3, 0x55, 0x3c, 0xd9, 0x13, 0x2a, 0xdf, 0xfd, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x1d, 0xe5, 0xbc, 0x7f, 0xe3, 0x04, 0x00, 0x00,
}
