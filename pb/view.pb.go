// Code generated by protoc-gen-go. DO NOT EDIT.
// source: view.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Node struct {
	Id          int64                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuildId     int64                `protobuf:"varint,2,opt,name=buildId" json:"buildId,omitempty"`
	LayoutId    int64                `protobuf:"varint,3,opt,name=layoutId" json:"layoutId,omitempty"`
	PaintId     int64                `protobuf:"varint,4,opt,name=paintId" json:"paintId,omitempty"`
	BridgeName  string               `protobuf:"bytes,7,opt,name=bridgeName" json:"bridgeName,omitempty"`
	BridgeValue *google_protobuf.Any `protobuf:"bytes,8,opt,name=bridgeValue" json:"bridgeValue,omitempty"`
	Children    []*Node              `protobuf:"bytes,5,rep,name=children" json:"children,omitempty"`
	LayoutGuide *Guide               `protobuf:"bytes,6,opt,name=layoutGuide" json:"layoutGuide,omitempty"`
	PaintStyle  *PaintStyle          `protobuf:"bytes,9,opt,name=paintStyle" json:"paintStyle,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Node) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetBuildId() int64 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *Node) GetLayoutId() int64 {
	if m != nil {
		return m.LayoutId
	}
	return 0
}

func (m *Node) GetPaintId() int64 {
	if m != nil {
		return m.PaintId
	}
	return 0
}

func (m *Node) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *Node) GetBridgeValue() *google_protobuf.Any {
	if m != nil {
		return m.BridgeValue
	}
	return nil
}

func (m *Node) GetChildren() []*Node {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Node) GetLayoutGuide() *Guide {
	if m != nil {
		return m.LayoutGuide
	}
	return nil
}

func (m *Node) GetPaintStyle() *PaintStyle {
	if m != nil {
		return m.PaintStyle
	}
	return nil
}

type Root struct {
	Node *Node `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
}

func (m *Root) Reset()                    { *m = Root{} }
func (m *Root) String() string            { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()               {}
func (*Root) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Root) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "view.Node")
	proto.RegisterType((*Root)(nil), "view.Root")
}

func init() { proto.RegisterFile("view.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0xbd, 0x6a, 0xf3, 0x30,
	0x14, 0xc5, 0x8a, 0xbf, 0xfc, 0x5c, 0x7f, 0x0d, 0x54, 0x74, 0x50, 0x33, 0x04, 0x93, 0x21, 0x78,
	0x92, 0x69, 0x0a, 0xdd, 0x9b, 0xa5, 0x78, 0x68, 0x08, 0x2a, 0x74, 0xe8, 0x66, 0x47, 0xaa, 0x23,
	0x50, 0x2d, 0x63, 0xec, 0x16, 0xbf, 0x4e, 0x1f, 0xa7, 0x4f, 0x55, 0x7c, 0x15, 0x1b, 0x77, 0xd3,
	0xf9, 0xb9, 0xba, 0xe7, 0x1e, 0x80, 0x4f, 0xad, 0xbe, 0x78, 0x59, 0xd9, 0xda, 0x52, 0xbf, 0x7b,
	0xaf, 0xfe, 0x9b, 0xb4, 0xb5, 0x4d, 0xed, 0xb8, 0x55, 0x50, 0xa6, 0xba, 0xe8, 0xc1, 0x6d, 0x6e,
	0x6d, 0x6e, 0x54, 0x8c, 0x28, 0x6b, 0xde, 0xe3, 0xb4, 0x68, 0x9d, 0xb4, 0xf9, 0x21, 0xe0, 0x1f,
	0xac, 0x54, 0x74, 0x09, 0x44, 0x4b, 0xe6, 0x85, 0x5e, 0x34, 0x11, 0x44, 0x4b, 0xca, 0x60, 0x96,
	0x35, 0xda, 0xc8, 0x44, 0x32, 0x82, 0x64, 0x0f, 0xe9, 0x0a, 0xe6, 0x6e, 0x55, 0x22, 0xd9, 0x04,
	0xa5, 0x01, 0x77, 0x53, 0xb8, 0x38, 0x91, 0xcc, 0x77, 0x53, 0x17, 0x48, 0xd7, 0x00, 0x59, 0xa5,
	0x65, 0xae, 0x0e, 0xe9, 0x87, 0x62, 0xb3, 0xd0, 0x8b, 0x16, 0x62, 0xc4, 0xd0, 0x07, 0x08, 0x1c,
	0x7a, 0x4d, 0x4d, 0xa3, 0xd8, 0x3c, 0xf4, 0xa2, 0x60, 0x77, 0xc3, 0x5d, 0x72, 0xde, 0x27, 0xe7,
	0x8f, 0x45, 0x2b, 0xc6, 0x46, 0xba, 0x85, 0xf9, 0xe9, 0xac, 0x8d, 0xac, 0x54, 0xc1, 0xfe, 0x85,
	0x93, 0x28, 0xd8, 0x01, 0xc7, 0x6e, 0xba, 0xab, 0xc4, 0xa0, 0xd1, 0x18, 0x02, 0x97, 0xf2, 0xa9,
	0xd1, 0x52, 0xb1, 0x29, 0xfe, 0x7f, 0xc5, 0x2f, 0xa5, 0x21, 0x29, 0xc6, 0x0e, 0x7a, 0x07, 0x80,
	0xd9, 0x5f, 0xea, 0xd6, 0x28, 0xb6, 0x40, 0xff, 0x35, 0x77, 0xb5, 0x1e, 0x07, 0x41, 0x8c, 0x4c,
	0x9b, 0x2d, 0xf8, 0xc2, 0xda, 0x9a, 0xae, 0xc1, 0x2f, 0xac, 0x54, 0xd8, 0xe6, 0xdf, 0x3c, 0xc8,
	0xef, 0x97, 0x6f, 0xa4, 0xcc, 0xbe, 0xc9, 0xec, 0xd9, 0x9e, 0xce, 0xfa, 0xb8, 0xcf, 0xa6, 0x78,
	0xde, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x38, 0x73, 0x89, 0xd5, 0x01, 0x00, 0x00,
}
